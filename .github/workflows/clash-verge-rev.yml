name: clash-verge-rev

on:
  workflow_dispatch:
    inputs:
      ref:
        required: false
        default: 'fix-migrate-tauri2-errors'
env:
  CARGO_INCREMENTAL: 0
  RUST_BACKTRACE: short

jobs:
  alpha:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-latest
            target: x86_64-pc-windows-msvc

    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v5
        with:
          repository: 'clash-verge-rev/clash-verge-rev'
          ref: ${{ inputs.ref }}
      - name: sed
        shell: bash
        run: |
          sed -i 's/Clash Verge.exe/clash-verge.exe/g' scripts/portable.mjs
          sed -i '58,91d' scripts/portable.mjs
          sed -i '1a import fsp from "fs/promises";' scripts/portable.mjs
        
      - name: Install Rust Stable
        uses: dtolnay/rust-toolchain@stable

      - name: Add Rust Target
        run: rustup target add ${{ matrix.target }}

      - name: Rust Cache
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: src-tauri
          cache-all-crates: true

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          run_install: false

      - name: Install Node
        uses: actions/setup-node@v5
        with:
          node-version: "22"
          cache: 'pnpm'

      - name: Pnpm install and check
        run: |
          pnpm i
          pnpm check ${{ matrix.target }}

      - name: Tauri build
        uses: tauri-apps/tauri-action@v0
        env:
          NODE_OPTIONS: "--max_old_space_size=4096"
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tauriScript: pnpm
          args: >
            --config '{"bundle": {"targets": [],"createUpdaterArtifacts": false}}' --target ${{ matrix.target }}

      - name: Portable Bundle
        if: matrix.os == 'windows-latest'
        run: |
          pnpm portable ${{ matrix.target }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Portable
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.target }}_portable
          path: "**/*portable.zip"

      - name: Upload exe
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.target }}
          path: |
            src-tauri/target/${{ matrix.target }}/release/clash-verge.exe
