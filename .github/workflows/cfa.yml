name: ClashForAndroid

on: 
  workflow_dispatch:
    inputs:
      repo:
        required: true
        default: 'Kr328/ClashForAndroid'
      ref:
        required: true
        default: 'main'

jobs:
  build:
    name: Build APK
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          repository: ${{ github.event.inputs.repo }}
          ref: ${{ github.event.inputs.ref }}
      - name: Checkout submodules
        run: git submodule update --init --recursive
      - name: merge dev
        run: |
          cd ./core/src/foss/golang/clash/
          patch=$(git format-patch HEAD^)
          git remote add upstream https://github.com/Dreamacro/clash.git
          git checkout -b dev upstream/dev
          git am ${patch}
        
      - name: Cache Go modules
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      
      - name: Setup Java
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17
      - uses: maxim-lobanov/setup-android-tools@v1
        with:
          packages: |
            platform-tools
            platforms;android-30
            build-tools;30.0.2
            ndk;22.1.7171670
          cache: true
      - name: Setup Cmake & Ninja
        uses: lukka/get-cmake@latest
      - name: Build
        run: ./gradlew app:assembleFossRelease
        
      - name: Sign APK
        uses: r0adkll/sign-android-release@v1
        id: sign_app
        with:
          releaseDirectory: app/build/outputs/apk/foss/release/
          signingKeyBase64: ${{ secrets.SIGN_FILE_BASE64 }}
          alias: ${{ secrets.KEY_ALIAS }}
          keyStorePassword: ${{ secrets.KEYSTORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}
      - name: upload artifact for apk
        uses: kittaakos/upload-artifact-as-is@master
        if: success()
        with:
          path: app/build/outputs/apk/foss/release/*-signed.apk
