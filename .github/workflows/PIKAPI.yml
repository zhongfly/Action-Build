name: Build PIKAPI Apk

on: 
  workflow_dispatch:
    inputs:
      repo:
        required: true
        default: 'niuhuan/pikapi'

env:
  flutter_channel: 'stable'
  flutter_version: '2.2.3'

jobs:
  gomobile:
    name: Gomobile
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          repository: ${{ github.event.inputs.repo }}
          ref: 'master' 
      - name: Checkout submodules
        run: git submodule update --init --recursive
      - name: Cache Go modules
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Cache Flutter dependencies
        uses: actions/cache@v2
        with:
          path: /opt/hostedtoolcache/flutter
          key: ${{ runner.OS }}-flutter-cache-${{ env.flutter_version }}-${{ env.flutter_channel }}-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: |
            ${{ runner.OS }}-flutter-cache-${{ env.flutter_version }}-${{ env.flutter_channel }}
          
      - uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - uses: maxim-lobanov/setup-android-tools@v1
        with:
          packages: |
            platform-tools
            platforms;android-30
            build-tools;30.0.2
            ndk;22.1.7171670
          cache: true
      - uses: actions/setup-go@v2
        with:
          go-version: '1.16'
      - name: Get gomobile
        run: |
          go env -w GO111MODULE=auto
          go install golang.org/x/mobile/cmd/gomobile@latest
          go get golang.org/x/mobile/cmd/gobind
          gomobile init
      - uses: subosito/flutter-action@v1
        with:
          channel: ${{ env.flutter_channel }}
          flutter-version: ${{ env.flutter_version }}

      - name: Cache pub dependencies
        uses: actions/cache@v2
        with:
          path: ${{ env.PUB_CACHE }}
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: ${{ runner.os }}-pub-
      
      - name: Build project
        run: |
          flutter config --build-dir=build/outputs
          cd go/mobile
          go get -d golang.org/x/mobile/cmd/gomobile
          sh bind-android.sh
          cd ../../
          flutter pub get
          flutter build apk

          
      - name: Sign APK
        uses: r0adkll/sign-android-release@v1
        id: sign_app
        with:
          releaseDirectory: build/app/outputs/flutter-apk
          signingKeyBase64: ${{ secrets.SIGN_FILE_BASE64 }}
          alias: ${{ secrets.KEY_ALIAS }}
          keyStorePassword: ${{ secrets.KEYSTORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}
      - name: Get Apk Info
        id: apk
        uses: JantHsueh/get-apk-info-action@master
        with:
          apkPath: ${{steps.sign_app.outputs.signedReleaseFile}}
      - name: upload artifact for apk
        uses: actions/upload-artifact@master
        if: success()
        with:
          name: ${{steps.apk.outputs.applicationId}}_${{steps.apk.outputs.versionNum}}_${{steps.apk.outputs.versionCode}}
          path: ${{steps.sign_app.outputs.signedReleaseFile}}
