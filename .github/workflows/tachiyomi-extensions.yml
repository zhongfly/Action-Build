name: Build tachiyomi-extensions
run-name: ${{ inputs.run_name }}

on: 
  workflow_dispatch:
    inputs:
      repo:
        required: true
        default: "zhongfly/tachiyomi-extensions"
      ref:
        required: true
        default: 'copymangas'
      lang:
        required: true
        default: 'zh'
      extension:
        required: true
        default: 'copymangas'
      run_name:
        description: 'The name displayed in the list of workflow runs'
        required: false

env:
  CI_CHUNK_SIZE: 65

jobs:
  gradle:
    name: Gradle CI Build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          repository: ${{ github.event.inputs.repo }}
          ref: ${{ github.event.inputs.ref }}
          fetch-depth: 1

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: adopt

      - name: Prepare signing key
        run: |
          echo ${{ secrets.SIGNING_KEY }} | base64 -d > signingkey.jks
          
      - name: Clean
        run: |
          cd ./src/
          rm -rf `ls -I ${{ github.event.inputs.lang }}`
          ls .
          cd ./${{ github.event.inputs.lang }}/
          rm -rf `ls -I ${{ github.event.inputs.extension }}`
          ls .

      - name: Build extensions
        uses: gradle/gradle-build-action@v2
        env:
          CI_MULTISRC: "false"
          CI_CHUNK_NUM: 0
          ALIAS: ${{ secrets.KEY_ALIAS }}
          KEY_STORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
        with:
          arguments: assembleRelease -q
      
#       - name: Sign APK
#         uses: r0adkll/sign-android-release@v1
#         id: sign_app
#         with:
#           releaseDirectory: ./src/${{ github.event.inputs.lang }}/${{ github.event.inputs.extension }}/build/outputs/apk/debug
#           signingKeyBase64: ${{ secrets.SIGN_FILE_BASE64 }}
#           alias: ${{ secrets.KEY_ALIAS }}
#           keyStorePassword: ${{ secrets.KEYSTORE_PASSWORD }}
#           keyPassword: ${{ secrets.KEY_PASSWORD }}
#       - name: Get Apk Info
#         id: apk
#         uses: JantHsueh/get-apk-info-action@master
#         with:
#           apkPath: ${{steps.sign_app.outputs.signedReleaseFile}}
#       - name: upload artifact for apk
#         uses: actions/upload-artifact@v2
#         if: success()
#         with:
#           name: ${{steps.apk.outputs.applicationId}}_${{steps.apk.outputs.versionNum}}_${{steps.apk.outputs.versionCode}}
#           path: ${{steps.sign_app.outputs.signedReleaseFile}}

      - name: Upload "${{ github.event.inputs.extension }}" APKs
        uses: zhongfly/upload-artifact@custom
        with:
          path: "**/*.apk"

      - name: Clean up CI files
        run: rm signingkey.jks
